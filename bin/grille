#!/bin/ksh

eval `cclargs $0 \
  -genphysx "0"     "1"     "[Produce geophysical fields with genphysx]"\
  -xrec     "0"     "1"     "[Visualize grid with xrec                ]"\
  -spi      "0"     "1"     "[Visualize grid with spi                 ]"\
  -max2     "0"     "1"     "[Visualize grid with max2                ]"\
  ++ $*`
#
printf "\n#############################################\n"
printf " GRILLE utility for gem version v_${ATM_MODEL_VERSION}\n"
printf "############################################# \n\n"
set -ex
## GENGRID=gemgrid_${BASE_ARCH}.Abs
GENGRID=$(which gemgrid_${BASE_ARCH}.Abs)

if [ ! -s gem_settings.nml ] ; then
  printf "\n Must provide file gem_settings.nml\n containing a valid &grid namelist\n\n"
  exit
fi

#ROOT_WORK=${TMPDIR}/grille$$
ROOT_WORK=${PWD}/grille$$
WORKDIR=${ROOT_WORK}/cfg_0001
/bin/rm -rf ${ROOT_WORK} ; mkdir -p ${WORKDIR}/CACHE
cp gem_settings.nml ${WORKDIR}/model_settings.nml

ngrids=1
GRDTYP=$(Um_fetchnml2.ksh Grd_typ_s grid gem_settings.nml)
if [ "$GRDTYP" == "GY" ] ; then 
  export GEM_YINYANG=YES
  ngrids=2
  mkdir -p ${WORKDIR}/YIN/000-000 ${WORKDIR}/YAN/000-000
  ln -s /home/binops/afsi/sio/datafiles/constants/thermoconsts ${WORKDIR}/YIN/000-000/constantes
  ln -s /home/binops/afsi/sio/datafiles/constants/thermoconsts ${WORKDIR}/YAN/000-000/constantes
else
  mkdir -p ${WORKDIR}/000-000
  ln -s /home/binops/afsi/sio/datafiles/constants/thermoconsts ${WORKDIR}/000-000/constantes
fi

export TASK_INPUT=${ROOT_WORK}
export TASK_WORK=${ROOT_WORK}
export DOMAIN_start=1
export DOMAIN_end=1
export DOMAIN_total=1
export GEM_NDOMAINS=1:1

#================== Produce Grid Pos Rec ================
/bin/rm -f tape1 tape1_core tape1_free tape2 tape2_core tape2_free 2> /dev/null

 r.run_in_parallel -pgm $GENGRID -npex 1 -npex ${ngrids} -inorder

find ${WORKDIR} -type f -name "*tape*" -exec mv {} . \;
find ${WORKDIR} -type f -name "eigenv_v1_*" -exec mv {} . \;

/bin/rm -rf $WORKDIR

#================== View the grid(s) ================
function launch_spi {
   local _args="$*"
   local _spi_version=7.6.2

   (. ssmuse-sh -p /ssm/net/cmoe/apps/SPI_${_spi_version} ; SPI -field $_args)
}

viewer=""
if [ $xrec -eq 1 ]; then
   viewer="xrec -imflds"
elif [ $spi -eq 1 ]; then
   viewer="launch_spi"
elif [ $max2 -eq 1 ]; then
   viewer="max2 -imflds"
fi

if [ -n "$viewer" ] ; then
  cat > p.dir <<pgsm100
 sortie (std,1000,a)
 compac=-12
 etiksrt='GRID'
 LAGRILLE
*
 heure(0)
 outlalo(-1,-1,-1)
*
 setintx(cubique)
 champ('ME')
end
pgsm100
  tmp1=''
  if [ -s tape1 ] ; then
    r.fstliste -izfst tape1 -nomvar ">>" | sed 's/\:/ /g' > liste
    ip1=`cat liste | awk '{print $3}'`
    ip2=`cat liste | awk '{print $4}'`
    ip3=`cat liste | awk '{print $5}'`
    ETK=`cat liste | awk '{print $9}'`
    cat p.dir | sed "s/LAGRILLE/grille (tape2,$ip1,$ip2,$ip3)/" | sed "s/GRID/$ETK/" > p1.dir
    tmp1=tmp1$$
    cp tape1 ${tmp1}
    pgsm -iment $ATM_MODEL_DFILES/bcmk/geophy/Gem_geophy.fst -ozsrt ${tmp1} -i p1.dir
  fi
  tmp2=''
  if [ -s tape2 ] ; then
    r.fstliste -izfst tape2 -nomvar ">>" | sed 's/\:/ /g' > liste
    ip1=`cat liste | awk '{print $3}'`
    ip2=`cat liste | awk '{print $4}'`
    ip3=`cat liste | awk '{print $5}'`
    ETK=`cat liste | awk '{print $9}'`
    cat p.dir | sed "s/LAGRILLE/grille (tape2,$ip1,$ip2,$ip3)/" | sed "s/GRID/$ETK/" > p2.dir
    tmp2=tmp2$$
    cp tape2 ${tmp2}
    pgsm -iment $ATM_MODEL_DFILES/bcmk/geophy/Gem_geophy.fst -ozsrt ${tmp2} -i p2.dir
    tmp2=tmp2$$
  fi
  $viewer ${tmp1} ${tmp2}
  /bin/rm -f p.dir p1.dir p2.dir liste ${tmp1} ${tmp2}
fi

if [ $genphysx -gt 0 ] ; then
  export PATH=$PATH:/data/dormrb04/genphysx/src/tcl
  ext=''
  if [ $yinyang -gt 0 ] ; then
    ext=_YIN
  fi
  GenPhysX.tcl -gridfile `pwd`/tape1 -batch -target GEMMESO -t 21600 -mail $USER@ec.gc.ca -result Gem_geophy${ext}
  if [ $yinyang -gt 0 ] ; then
    GenPhysX.tcl -gridfile `pwd`/tape2 -batch -target GEMMESO -t 21600 -mail $USER@ec.gc.ca -result Gem_geophy_YAN
  fi
fi

